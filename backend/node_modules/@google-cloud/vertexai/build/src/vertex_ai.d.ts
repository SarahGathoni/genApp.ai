/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { GoogleAuth } from 'google-auth-library';
import { GenerativeModelPreview, GenerativeModel } from './models';
import { ModelParams, VertexInit } from './types/content';
/**
 * Base class for authenticating to Vertex, creates the preview namespace.
 * Users use getGenerativeModel method to start using Google's generative models in GA.
 */
export declare class VertexAI {
    preview: VertexAI_Preview;
    private readonly project;
    private readonly location;
    protected googleAuth: GoogleAuth;
    private readonly apiEndpoint?;
    /**
     * @constructor
     * @param {VertexInit} init - assign authentication related information,
     *     including project and location string, to instantiate a Vertex AI
     * client.
     */
    constructor(init: VertexInit);
    /**
     * @param {ModelParams} modelParams - {@link ModelParams} Parameters to specify the generative model.
     * @return {GenerativeModel} Instance of the GenerativeModel class. {@link GenerativeModel}
     */
    getGenerativeModel(modelParams: ModelParams): GenerativeModel;
}
/**
 * Preview namespace for VertexAI. Users invoke getGenerativeModel method to start using Google's generative models in preview.
 */
declare class VertexAI_Preview {
    private readonly project;
    private readonly location;
    protected readonly googleAuth: GoogleAuth;
    private readonly apiEndpoint?;
    /**
     * @constructor
     * @param {string} - project The Google Cloud project to use for the request
     * @param {string} - location The Google Cloud project location to use for the request
     * @param {GoogleAuth} - googleAuth The GoogleAuthen class instance from google-auth-library.
     *        Complete list of authentication options is documented in the GoogleAuthOptions interface:
     *        https://github.com/googleapis/google-auth-library-nodejs/blob/main/src/auth/googleauth.ts
     * @param {string} - [apiEndpoint] The base Vertex AI endpoint to use for the request. If
     *        not provided, the default regionalized endpoint
     *        (i.e. us-central1-aiplatform.googleapis.com) will be used.
     */
    constructor(project: string, location: string, googleAuth: GoogleAuth, apiEndpoint?: string);
    /**
     * @param {ModelParams} modelParams - {@link ModelParams} Parameters to specify the generative model.
     * @return {GenerativeModelPreview} Instance of the GenerativeModelPreview class. {@link GenerativeModelPreview}
     */
    getGenerativeModel(modelParams: ModelParams): GenerativeModelPreview;
}
export {};
